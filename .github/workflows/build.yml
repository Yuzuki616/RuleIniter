name: Build and Release

on:
  workflow_dispatch:
  release:
    types: [ published ]

jobs:
  build:
    strategy:
      matrix:
        goos: [ windows, linux, darwin ]
        goarch: [ amd64, 386, arm, arm64 ]
        exclude:
          - goos: darwin
            goarch: arm
          - goos: darwin
            goarch: 386
          - goos: windows
            goarch: arm64
      fail-fast: true

    runs-on: ubuntu-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOARM: ${{ matrix.goarm }}
      CGO_ENABLED: 0
      Name: ${{ github.event.repository.name }}
      OutName: ${{ github.event.repository.name }}-${{ matrix.goos }}-${{ matrix.goarch }}
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 'stable'
      - name: Get project dependencies
        run: go mod download
      - name: Get release version
        run: |
          echo "version=$(echo $GITHUB_REF | cut -d / -f 3)" >> $GITHUB_ENV
      - name: Build
        run: |
          echo "version: $version"
          mkdir -p build_assets
          go build -v -o build_assets/$Name -trimpath -ldflags "-X 'main.version=$version' -s -w -buildid="
      - name: Windows Rename
        if: matrix.goos == 'windows'
        run: |
          cd ./build_assets || exit 1
          mv $Name $Name.exe
      - name: Prepare to release
        run: |
          cp ${GITHUB_WORKSPACE}/README.md ./build_assets/README.md
          cp ${GITHUB_WORKSPACE}/LICENSE ./build_assets/LICENSE
          cp ${GITHUB_WORKSPACE}/example/* ./build_assets/
      - name: Create ZIP archive
        shell: bash
        run: |
          mkdir output
          cd build_assets
          touch -mt $(date +%Y01010000) *
          zip -9vr ../output/$OutName.zip .
          cd ../output
          FILE=./$OutName.zip
          DGST=$FILE.dgst
          for METHOD in {"md5","sha1","sha256","sha512"}
          do
          openssl dgst -$METHOD $FILE | sed 's/([^)]*)//g' >>$DGST
          done
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./output/*
          tag: ${{ github.ref }}
          file_glob: true
